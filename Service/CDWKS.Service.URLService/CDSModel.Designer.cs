//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace CDWKS.Service.URLService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CDSModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CDSModelContainer object using the connection string found in the 'CDSModelContainer' section of the application configuration file.
        /// </summary>
        public CDSModelContainer() : base("name=CDSModelContainer", "CDSModelContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CDSModelContainer object.
        /// </summary>
        public CDSModelContainer(string connectionString) : base(connectionString, "CDSModelContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CDSModelContainer object.
        /// </summary>
        public CDSModelContainer(EntityConnection connection) : base(connection, "CDSModelContainer")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CDSLink> CDSLinks
        {
            get
            {
                if ((_CDSLinks == null))
                {
                    _CDSLinks = base.CreateObjectSet<CDSLink>("CDSLinks");
                }
                return _CDSLinks;
            }
        }
        private ObjectSet<CDSLink> _CDSLinks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CDSLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCDSLinks(CDSLink cDSLink)
        {
            base.AddObject("CDSLinks", cDSLink);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CDSModel", Name="CDSLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CDSLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CDSLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="family">Initial value of the Family property.</param>
        /// <param name="itemType">Initial value of the ItemType property.</param>
        /// <param name="cDSManufacturer">Initial value of the CDSManufacturer property.</param>
        /// <param name="cDSProdNum">Initial value of the CDSProdNum property.</param>
        public static CDSLink CreateCDSLink(global::System.Int32 id, global::System.String family, global::System.String itemType, global::System.String cDSManufacturer, global::System.String cDSProdNum)
        {
            CDSLink cDSLink = new CDSLink();
            cDSLink.Id = id;
            cDSLink.Family = family;
            cDSLink.ItemType = itemType;
            cDSLink.CDSManufacturer = cDSManufacturer;
            cDSLink.CDSProdNum = cDSProdNum;
            return cDSLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Family
        {
            get
            {
                return _Family;
            }
            set
            {
                OnFamilyChanging(value);
                ReportPropertyChanging("Family");
                _Family = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Family");
                OnFamilyChanged();
            }
        }
        private global::System.String _Family;
        partial void OnFamilyChanging(global::System.String value);
        partial void OnFamilyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDSManufacturer
        {
            get
            {
                return _CDSManufacturer;
            }
            set
            {
                OnCDSManufacturerChanging(value);
                ReportPropertyChanging("CDSManufacturer");
                _CDSManufacturer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CDSManufacturer");
                OnCDSManufacturerChanged();
            }
        }
        private global::System.String _CDSManufacturer;
        partial void OnCDSManufacturerChanging(global::System.String value);
        partial void OnCDSManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDSProdNum
        {
            get
            {
                return _CDSProdNum;
            }
            set
            {
                OnCDSProdNumChanging(value);
                ReportPropertyChanging("CDSProdNum");
                _CDSProdNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CDSProdNum");
                OnCDSProdNumChanged();
            }
        }
        private global::System.String _CDSProdNum;
        partial void OnCDSProdNumChanging(global::System.String value);
        partial void OnCDSProdNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
    }

    #endregion
    
}
