//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "FK_LibraryDownload", "Libraries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.BXC.Domain.MasterControl.Library), "Downloads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.Download))]
[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "FK_UserDownload", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.BXC.Domain.MasterControl.User), "Downloads", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.Download))]
[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "FK_ExtendedPropertyPropertyName", "PropertyNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.BXC.Domain.MasterControl.PropertyName), "ExtendedProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.ExtendedProperty))]
[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "FK_ExtendedPropertyPropertyValue", "PropertyValues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.BXC.Domain.MasterControl.PropertyValue), "ExtendedProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.ExtendedProperty))]
[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "FK_UserExtendedProperty", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.BXC.Domain.MasterControl.User), "ExtendedProperties", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.ExtendedProperty))]
[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "FK_LicenseOwner", "Owners", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.BXC.Domain.MasterControl.Owner), "Licenses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.License))]
[assembly: EdmRelationshipAttribute("BXCMasterControlModel", "LicenseLibrary", "Libraries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.Library), "Licenses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.BXC.Domain.MasterControl.License))]

#endregion

namespace CDWKS.BXC.Domain.MasterControl
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BXC_MasterControlEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BXC_MasterControlEntities object using the connection string found in the 'BXC_MasterControlEntities' section of the application configuration file.
        /// </summary>
        public BXC_MasterControlEntities() : base("name=BXC_MasterControlEntities", "BXC_MasterControlEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BXC_MasterControlEntities object.
        /// </summary>
        public BXC_MasterControlEntities(string connectionString) : base(connectionString, "BXC_MasterControlEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BXC_MasterControlEntities object.
        /// </summary>
        public BXC_MasterControlEntities(EntityConnection connection) : base(connection, "BXC_MasterControlEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Download> Downloads
        {
            get
            {
                if ((_Downloads == null))
                {
                    _Downloads = base.CreateObjectSet<Download>("Downloads");
                }
                return _Downloads;
            }
        }
        private ObjectSet<Download> _Downloads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExtendedProperty> ExtendedProperties
        {
            get
            {
                if ((_ExtendedProperties == null))
                {
                    _ExtendedProperties = base.CreateObjectSet<ExtendedProperty>("ExtendedProperties");
                }
                return _ExtendedProperties;
            }
        }
        private ObjectSet<ExtendedProperty> _ExtendedProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Library> Libraries
        {
            get
            {
                if ((_Libraries == null))
                {
                    _Libraries = base.CreateObjectSet<Library>("Libraries");
                }
                return _Libraries;
            }
        }
        private ObjectSet<Library> _Libraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<License> Licenses
        {
            get
            {
                if ((_Licenses == null))
                {
                    _Licenses = base.CreateObjectSet<License>("Licenses");
                }
                return _Licenses;
            }
        }
        private ObjectSet<License> _Licenses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Owner> Owners
        {
            get
            {
                if ((_Owners == null))
                {
                    _Owners = base.CreateObjectSet<Owner>("Owners");
                }
                return _Owners;
            }
        }
        private ObjectSet<Owner> _Owners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyName> PropertyNames
        {
            get
            {
                if ((_PropertyNames == null))
                {
                    _PropertyNames = base.CreateObjectSet<PropertyName>("PropertyNames");
                }
                return _PropertyNames;
            }
        }
        private ObjectSet<PropertyName> _PropertyNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyValue> PropertyValues
        {
            get
            {
                if ((_PropertyValues == null))
                {
                    _PropertyValues = base.CreateObjectSet<PropertyValue>("PropertyValues");
                }
                return _PropertyValues;
            }
        }
        private ObjectSet<PropertyValue> _PropertyValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLibrary> UserLibraries
        {
            get
            {
                if ((_UserLibraries == null))
                {
                    _UserLibraries = base.CreateObjectSet<UserLibrary>("UserLibraries");
                }
                return _UserLibraries;
            }
        }
        private ObjectSet<UserLibrary> _UserLibraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Downloads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownloads(Download download)
        {
            base.AddObject("Downloads", download);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExtendedProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExtendedProperties(ExtendedProperty extendedProperty)
        {
            base.AddObject("ExtendedProperties", extendedProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Libraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLibraries(Library library)
        {
            base.AddObject("Libraries", library);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Licenses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenses(License license)
        {
            base.AddObject("Licenses", license);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Owners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwners(Owner owner)
        {
            base.AddObject("Owners", owner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyNames(PropertyName propertyName)
        {
            base.AddObject("PropertyNames", propertyName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyValues(PropertyValue propertyValue)
        {
            base.AddObject("PropertyValues", propertyValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLibraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLibraries(UserLibrary userLibrary)
        {
            base.AddObject("UserLibraries", userLibrary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="Download")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Download : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Download object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="content_Id">Initial value of the Content_Id property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        public static Download CreateDownload(global::System.Int32 id, global::System.String content_Id, global::System.DateTime dateTime)
        {
            Download download = new Download();
            download.Id = id;
            download.Content_Id = content_Id;
            download.DateTime = dateTime;
            return download;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content_Id
        {
            get
            {
                return _Content_Id;
            }
            set
            {
                OnContent_IdChanging(value);
                ReportPropertyChanging("Content_Id");
                _Content_Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content_Id");
                OnContent_IdChanged();
            }
        }
        private global::System.String _Content_Id;
        partial void OnContent_IdChanging(global::System.String value);
        partial void OnContent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_LibraryDownload", "Libraries")]
        public Library Library
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCMasterControlModel.FK_LibraryDownload", "Libraries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCMasterControlModel.FK_LibraryDownload", "Libraries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Library> LibraryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCMasterControlModel.FK_LibraryDownload", "Libraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Library>("BXCMasterControlModel.FK_LibraryDownload", "Libraries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_UserDownload", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCMasterControlModel.FK_UserDownload", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCMasterControlModel.FK_UserDownload", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCMasterControlModel.FK_UserDownload", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BXCMasterControlModel.FK_UserDownload", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="ExtendedProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExtendedProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExtendedProperty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ExtendedProperty CreateExtendedProperty(global::System.Int32 id)
        {
            ExtendedProperty extendedProperty = new ExtendedProperty();
            extendedProperty.Id = id;
            return extendedProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_ExtendedPropertyPropertyName", "PropertyNames")]
        public PropertyName PropertyName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyName>("BXCMasterControlModel.FK_ExtendedPropertyPropertyName", "PropertyNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyName>("BXCMasterControlModel.FK_ExtendedPropertyPropertyName", "PropertyNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyName> PropertyNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyName>("BXCMasterControlModel.FK_ExtendedPropertyPropertyName", "PropertyNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyName>("BXCMasterControlModel.FK_ExtendedPropertyPropertyName", "PropertyNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_ExtendedPropertyPropertyValue", "PropertyValues")]
        public PropertyValue PropertyValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValue>("BXCMasterControlModel.FK_ExtendedPropertyPropertyValue", "PropertyValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValue>("BXCMasterControlModel.FK_ExtendedPropertyPropertyValue", "PropertyValues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyValue> PropertyValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValue>("BXCMasterControlModel.FK_ExtendedPropertyPropertyValue", "PropertyValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyValue>("BXCMasterControlModel.FK_ExtendedPropertyPropertyValue", "PropertyValues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_UserExtendedProperty", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCMasterControlModel.FK_UserExtendedProperty", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCMasterControlModel.FK_UserExtendedProperty", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCMasterControlModel.FK_UserExtendedProperty", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BXCMasterControlModel.FK_UserExtendedProperty", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="Library")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Library : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Library object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Library CreateLibrary(global::System.Int32 id, global::System.String name)
        {
            Library library = new Library();
            library.Id = id;
            library.Name = name;
            return library;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_LibraryDownload", "Downloads")]
        public EntityCollection<Download> Downloads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Download>("BXCMasterControlModel.FK_LibraryDownload", "Downloads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Download>("BXCMasterControlModel.FK_LibraryDownload", "Downloads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "LicenseLibrary", "Licenses")]
        public EntityCollection<License> Licenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<License>("BXCMasterControlModel.LicenseLibrary", "Licenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<License>("BXCMasterControlModel.LicenseLibrary", "Licenses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="License")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class License : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new License object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="authCode">Initial value of the AuthCode property.</param>
        /// <param name="maxUsers">Initial value of the MaxUsers property.</param>
        /// <param name="licenseType_Id">Initial value of the LicenseType_Id property.</param>
        public static License CreateLicense(global::System.Int32 id, global::System.String authCode, global::System.Int64 maxUsers, global::System.Int32 licenseType_Id)
        {
            License license = new License();
            license.Id = id;
            license.AuthCode = authCode;
            license.MaxUsers = maxUsers;
            license.LicenseType_Id = licenseType_Id;
            return license;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthCode
        {
            get
            {
                return _AuthCode;
            }
            set
            {
                OnAuthCodeChanging(value);
                ReportPropertyChanging("AuthCode");
                _AuthCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthCode");
                OnAuthCodeChanged();
            }
        }
        private global::System.String _AuthCode;
        partial void OnAuthCodeChanging(global::System.String value);
        partial void OnAuthCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaxUsers
        {
            get
            {
                return _MaxUsers;
            }
            set
            {
                OnMaxUsersChanging(value);
                ReportPropertyChanging("MaxUsers");
                _MaxUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxUsers");
                OnMaxUsersChanged();
            }
        }
        private global::System.Int64 _MaxUsers;
        partial void OnMaxUsersChanging(global::System.Int64 value);
        partial void OnMaxUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicenseType_Id
        {
            get
            {
                return _LicenseType_Id;
            }
            set
            {
                OnLicenseType_IdChanging(value);
                ReportPropertyChanging("LicenseType_Id");
                _LicenseType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseType_Id");
                OnLicenseType_IdChanged();
            }
        }
        private global::System.Int32 _LicenseType_Id;
        partial void OnLicenseType_IdChanging(global::System.Int32 value);
        partial void OnLicenseType_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_LicenseOwner", "Owners")]
        public Owner Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("BXCMasterControlModel.FK_LicenseOwner", "Owners").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("BXCMasterControlModel.FK_LicenseOwner", "Owners").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("BXCMasterControlModel.FK_LicenseOwner", "Owners");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("BXCMasterControlModel.FK_LicenseOwner", "Owners", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "LicenseLibrary", "Libraries")]
        public EntityCollection<Library> Libraries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Library>("BXCMasterControlModel.LicenseLibrary", "Libraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Library>("BXCMasterControlModel.LicenseLibrary", "Libraries", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="Owner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Owner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Owner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Owner CreateOwner(global::System.Int32 id, global::System.String name, global::System.DateTime createdDate)
        {
            Owner owner = new Owner();
            owner.Id = id;
            owner.Name = name;
            owner.CreatedDate = createdDate;
            return owner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_LicenseOwner", "Licenses")]
        public EntityCollection<License> Licenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<License>("BXCMasterControlModel.FK_LicenseOwner", "Licenses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<License>("BXCMasterControlModel.FK_LicenseOwner", "Licenses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="PropertyName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PropertyName CreatePropertyName(global::System.Int32 id, global::System.String name)
        {
            PropertyName propertyName = new PropertyName();
            propertyName.Id = id;
            propertyName.Name = name;
            return propertyName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_ExtendedPropertyPropertyName", "ExtendedProperties")]
        public EntityCollection<ExtendedProperty> ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtendedProperty>("BXCMasterControlModel.FK_ExtendedPropertyPropertyName", "ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtendedProperty>("BXCMasterControlModel.FK_ExtendedPropertyPropertyName", "ExtendedProperties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="PropertyValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="extendedProperty_Id">Initial value of the ExtendedProperty_Id property.</param>
        public static PropertyValue CreatePropertyValue(global::System.Int32 id, global::System.String value, global::System.Int32 extendedProperty_Id)
        {
            PropertyValue propertyValue = new PropertyValue();
            propertyValue.Id = id;
            propertyValue.Value = value;
            propertyValue.ExtendedProperty_Id = extendedProperty_Id;
            return propertyValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExtendedProperty_Id
        {
            get
            {
                return _ExtendedProperty_Id;
            }
            set
            {
                OnExtendedProperty_IdChanging(value);
                ReportPropertyChanging("ExtendedProperty_Id");
                _ExtendedProperty_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtendedProperty_Id");
                OnExtendedProperty_IdChanged();
            }
        }
        private global::System.Int32 _ExtendedProperty_Id;
        partial void OnExtendedProperty_IdChanging(global::System.Int32 value);
        partial void OnExtendedProperty_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_ExtendedPropertyPropertyValue", "ExtendedProperties")]
        public EntityCollection<ExtendedProperty> ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtendedProperty>("BXCMasterControlModel.FK_ExtendedPropertyPropertyValue", "ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtendedProperty>("BXCMasterControlModel.FK_ExtendedPropertyPropertyValue", "ExtendedProperties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Password = password;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_UserDownload", "Downloads")]
        public EntityCollection<Download> Downloads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Download>("BXCMasterControlModel.FK_UserDownload", "Downloads");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Download>("BXCMasterControlModel.FK_UserDownload", "Downloads", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCMasterControlModel", "FK_UserExtendedProperty", "ExtendedProperties")]
        public EntityCollection<ExtendedProperty> ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtendedProperty>("BXCMasterControlModel.FK_UserExtendedProperty", "ExtendedProperties");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtendedProperty>("BXCMasterControlModel.FK_UserExtendedProperty", "ExtendedProperties", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCMasterControlModel", Name="UserLibrary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLibrary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLibrary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="libraryId">Initial value of the LibraryId property.</param>
        public static UserLibrary CreateUserLibrary(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 libraryId)
        {
            UserLibrary userLibrary = new UserLibrary();
            userLibrary.Id = id;
            userLibrary.UserId = userId;
            userLibrary.LibraryId = libraryId;
            return userLibrary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryId
        {
            get
            {
                return _LibraryId;
            }
            set
            {
                OnLibraryIdChanging(value);
                ReportPropertyChanging("LibraryId");
                _LibraryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LibraryId");
                OnLibraryIdChanged();
            }
        }
        private global::System.Int32 _LibraryId;
        partial void OnLibraryIdChanging(global::System.Int32 value);
        partial void OnLibraryIdChanged();

        #endregion

    
    }

    #endregion

    
}
