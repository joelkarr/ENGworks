//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.AutodeskFileTreeNode), "AutodeskFileIESFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.AutodeskFileIESFile), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_IESFileAutodeskFileIESFile", "IESFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.IESFile), "AutodeskFileIESFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.AutodeskFileIESFile), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_AutodeskFileImage", "AutodeskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CDWKS.Model.EF.Content.AutodeskFile), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.Image), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.AutodeskFile), "AutodeskFileTreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.AutodeskFileTreeNode), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_ItemAutodeskFile", "AutodeskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.AutodeskFile), "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.Item), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNode_TreeNode", "TreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.TreeNode), "AutodeskFileTreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.AutodeskFileTreeNode), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_ContentLibraryTreeNode", "ContentLibraries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.ContentLibrary), "TreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.TreeNode), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_ParameterItem", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.Item), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.Parameter), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_ItemParameterSearchNames", "SearchNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.SearchName), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.Parameter), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_ItemParameterSearchValues", "SearchValues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.Content.SearchValue), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.Parameter), true)]
[assembly: EdmRelationshipAttribute("BXC_ContentModel", "FK_TreeNodeTreeNode", "TreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CDWKS.Model.EF.Content.TreeNode), "TreeNodes1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.Content.TreeNode), true)]

#endregion

namespace CDWKS.Model.EF.Content
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BXC_ContentModelEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BXC_ContentModelEntities object using the connection string found in the 'BXC_ContentModelEntities' section of the application configuration file.
        /// </summary>
        public BXC_ContentModelEntities() : base("name=BXC_ContentModelEntities", "BXC_ContentModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BXC_ContentModelEntities object.
        /// </summary>
        public BXC_ContentModelEntities(string connectionString) : base(connectionString, "BXC_ContentModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BXC_ContentModelEntities object.
        /// </summary>
        public BXC_ContentModelEntities(EntityConnection connection) : base(connection, "BXC_ContentModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutodeskFileIESFile> AutodeskFileIESFiles
        {
            get
            {
                if ((_AutodeskFileIESFiles == null))
                {
                    _AutodeskFileIESFiles = base.CreateObjectSet<AutodeskFileIESFile>("AutodeskFileIESFiles");
                }
                return _AutodeskFileIESFiles;
            }
        }
        private ObjectSet<AutodeskFileIESFile> _AutodeskFileIESFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutodeskFile> AutodeskFiles
        {
            get
            {
                if ((_AutodeskFiles == null))
                {
                    _AutodeskFiles = base.CreateObjectSet<AutodeskFile>("AutodeskFiles");
                }
                return _AutodeskFiles;
            }
        }
        private ObjectSet<AutodeskFile> _AutodeskFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutodeskFileTreeNode> AutodeskFileTreeNodes
        {
            get
            {
                if ((_AutodeskFileTreeNodes == null))
                {
                    _AutodeskFileTreeNodes = base.CreateObjectSet<AutodeskFileTreeNode>("AutodeskFileTreeNodes");
                }
                return _AutodeskFileTreeNodes;
            }
        }
        private ObjectSet<AutodeskFileTreeNode> _AutodeskFileTreeNodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CDSLink> CDSLinks
        {
            get
            {
                if ((_CDSLinks == null))
                {
                    _CDSLinks = base.CreateObjectSet<CDSLink>("CDSLinks");
                }
                return _CDSLinks;
            }
        }
        private ObjectSet<CDSLink> _CDSLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentLibrary> ContentLibraries
        {
            get
            {
                if ((_ContentLibraries == null))
                {
                    _ContentLibraries = base.CreateObjectSet<ContentLibrary>("ContentLibraries");
                }
                return _ContentLibraries;
            }
        }
        private ObjectSet<ContentLibrary> _ContentLibraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IESFile> IESFiles
        {
            get
            {
                if ((_IESFiles == null))
                {
                    _IESFiles = base.CreateObjectSet<IESFile>("IESFiles");
                }
                return _IESFiles;
            }
        }
        private ObjectSet<IESFile> _IESFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchName> SearchNames
        {
            get
            {
                if ((_SearchNames == null))
                {
                    _SearchNames = base.CreateObjectSet<SearchName>("SearchNames");
                }
                return _SearchNames;
            }
        }
        private ObjectSet<SearchName> _SearchNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchValue> SearchValues
        {
            get
            {
                if ((_SearchValues == null))
                {
                    _SearchValues = base.CreateObjectSet<SearchValue>("SearchValues");
                }
                return _SearchValues;
            }
        }
        private ObjectSet<SearchValue> _SearchValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeNode> TreeNodes
        {
            get
            {
                if ((_TreeNodes == null))
                {
                    _TreeNodes = base.CreateObjectSet<TreeNode>("TreeNodes");
                }
                return _TreeNodes;
            }
        }
        private ObjectSet<TreeNode> _TreeNodes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutodeskFileIESFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutodeskFileIESFiles(AutodeskFileIESFile autodeskFileIESFile)
        {
            base.AddObject("AutodeskFileIESFiles", autodeskFileIESFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutodeskFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutodeskFiles(AutodeskFile autodeskFile)
        {
            base.AddObject("AutodeskFiles", autodeskFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutodeskFileTreeNodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutodeskFileTreeNodes(AutodeskFileTreeNode autodeskFileTreeNode)
        {
            base.AddObject("AutodeskFileTreeNodes", autodeskFileTreeNode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CDSLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCDSLinks(CDSLink cDSLink)
        {
            base.AddObject("CDSLinks", cDSLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentLibraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentLibraries(ContentLibrary contentLibrary)
        {
            base.AddObject("ContentLibraries", contentLibrary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IESFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIESFiles(IESFile iESFile)
        {
            base.AddObject("IESFiles", iESFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchNames(SearchName searchName)
        {
            base.AddObject("SearchNames", searchName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchValues(SearchValue searchValue)
        {
            base.AddObject("SearchValues", searchValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeNodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeNodes(TreeNode treeNode)
        {
            base.AddObject("TreeNodes", treeNode);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="AutodeskFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutodeskFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutodeskFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mC_OwnerId">Initial value of the MC_OwnerId property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static AutodeskFile CreateAutodeskFile(global::System.Int32 id, global::System.String name, global::System.String mC_OwnerId, global::System.Int32 version)
        {
            AutodeskFile autodeskFile = new AutodeskFile();
            autodeskFile.Id = id;
            autodeskFile.Name = name;
            autodeskFile.MC_OwnerId = mC_OwnerId;
            autodeskFile.Version = version;
            return autodeskFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MC_OwnerId
        {
            get
            {
                return _MC_OwnerId;
            }
            set
            {
                OnMC_OwnerIdChanging(value);
                ReportPropertyChanging("MC_OwnerId");
                _MC_OwnerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MC_OwnerId");
                OnMC_OwnerIdChanged();
            }
        }
        private global::System.String _MC_OwnerId;
        partial void OnMC_OwnerIdChanging(global::System.String value);
        partial void OnMC_OwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeCatalogHeader
        {
            get
            {
                return _TypeCatalogHeader;
            }
            set
            {
                OnTypeCatalogHeaderChanging(value);
                ReportPropertyChanging("TypeCatalogHeader");
                _TypeCatalogHeader = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeCatalogHeader");
                OnTypeCatalogHeaderChanged();
            }
        }
        private global::System.String _TypeCatalogHeader;
        partial void OnTypeCatalogHeaderChanging(global::System.String value);
        partial void OnTypeCatalogHeaderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileImage", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("BXC_ContentModel.FK_AutodeskFileImage", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("BXC_ContentModel.FK_AutodeskFileImage", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFileTreeNodes")]
        public EntityCollection<AutodeskFileTreeNode> AutodeskFileTreeNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFileTreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFileTreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ItemAutodeskFile", "Items")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("BXC_ContentModel.FK_ItemAutodeskFile", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("BXC_ContentModel.FK_ItemAutodeskFile", "Items", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="AutodeskFileIESFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutodeskFileIESFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutodeskFileIESFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autodeskFileTreeNode_Id">Initial value of the AutodeskFileTreeNode_Id property.</param>
        /// <param name="iESFile_Id">Initial value of the IESFile_Id property.</param>
        public static AutodeskFileIESFile CreateAutodeskFileIESFile(global::System.Int32 id, global::System.Int32 autodeskFileTreeNode_Id, global::System.Int32 iESFile_Id)
        {
            AutodeskFileIESFile autodeskFileIESFile = new AutodeskFileIESFile();
            autodeskFileIESFile.Id = id;
            autodeskFileIESFile.AutodeskFileTreeNode_Id = autodeskFileTreeNode_Id;
            autodeskFileIESFile.IESFile_Id = iESFile_Id;
            return autodeskFileIESFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFileTreeNode_Id
        {
            get
            {
                return _AutodeskFileTreeNode_Id;
            }
            set
            {
                OnAutodeskFileTreeNode_IdChanging(value);
                ReportPropertyChanging("AutodeskFileTreeNode_Id");
                _AutodeskFileTreeNode_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFileTreeNode_Id");
                OnAutodeskFileTreeNode_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFileTreeNode_Id;
        partial void OnAutodeskFileTreeNode_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFileTreeNode_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IESFile_Id
        {
            get
            {
                return _IESFile_Id;
            }
            set
            {
                OnIESFile_IdChanging(value);
                ReportPropertyChanging("IESFile_Id");
                _IESFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IESFile_Id");
                OnIESFile_IdChanged();
            }
        }
        private global::System.Int32 _IESFile_Id;
        partial void OnIESFile_IdChanging(global::System.Int32 value);
        partial void OnIESFile_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes")]
        public AutodeskFileTreeNode AutodeskFileTreeNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFileTreeNode> AutodeskFileTreeNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_IESFileAutodeskFileIESFile", "IESFiles")]
        public IESFile IESFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IESFile>("BXC_ContentModel.FK_IESFileAutodeskFileIESFile", "IESFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IESFile>("BXC_ContentModel.FK_IESFileAutodeskFileIESFile", "IESFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IESFile> IESFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IESFile>("BXC_ContentModel.FK_IESFileAutodeskFileIESFile", "IESFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IESFile>("BXC_ContentModel.FK_IESFileAutodeskFileIESFile", "IESFiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="AutodeskFileTreeNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutodeskFileTreeNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutodeskFileTreeNode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autodeskFile_Id">Initial value of the AutodeskFile_Id property.</param>
        /// <param name="treeNodes_Id">Initial value of the TreeNodes_Id property.</param>
        public static AutodeskFileTreeNode CreateAutodeskFileTreeNode(global::System.Int32 id, global::System.Int32 autodeskFile_Id, global::System.Int32 treeNodes_Id)
        {
            AutodeskFileTreeNode autodeskFileTreeNode = new AutodeskFileTreeNode();
            autodeskFileTreeNode.Id = id;
            autodeskFileTreeNode.AutodeskFile_Id = autodeskFile_Id;
            autodeskFileTreeNode.TreeNodes_Id = treeNodes_Id;
            return autodeskFileTreeNode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFile_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeNodes_Id
        {
            get
            {
                return _TreeNodes_Id;
            }
            set
            {
                OnTreeNodes_IdChanging(value);
                ReportPropertyChanging("TreeNodes_Id");
                _TreeNodes_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeNodes_Id");
                OnTreeNodes_IdChanged();
            }
        }
        private global::System.Int32 _TreeNodes_Id;
        partial void OnTreeNodes_IdChanging(global::System.Int32 value);
        partial void OnTreeNodes_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileIESFiles")]
        public EntityCollection<AutodeskFileIESFile> AutodeskFileIESFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileIESFile>("BXC_ContentModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileIESFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileIESFile>("BXC_ContentModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileIESFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNode_TreeNode", "TreeNodes")]
        public TreeNode TreeNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreeNode> TreeNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="CDSLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CDSLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CDSLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="family">Initial value of the Family property.</param>
        /// <param name="itemType">Initial value of the ItemType property.</param>
        /// <param name="cDSManufacturer">Initial value of the CDSManufacturer property.</param>
        /// <param name="cDSProdNum">Initial value of the CDSProdNum property.</param>
        public static CDSLink CreateCDSLink(global::System.Int32 id, global::System.String family, global::System.String itemType, global::System.String cDSManufacturer, global::System.String cDSProdNum)
        {
            CDSLink cDSLink = new CDSLink();
            cDSLink.Id = id;
            cDSLink.Family = family;
            cDSLink.ItemType = itemType;
            cDSLink.CDSManufacturer = cDSManufacturer;
            cDSLink.CDSProdNum = cDSProdNum;
            return cDSLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Family
        {
            get
            {
                return _Family;
            }
            set
            {
                OnFamilyChanging(value);
                ReportPropertyChanging("Family");
                _Family = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Family");
                OnFamilyChanged();
            }
        }
        private global::System.String _Family;
        partial void OnFamilyChanging(global::System.String value);
        partial void OnFamilyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDSManufacturer
        {
            get
            {
                return _CDSManufacturer;
            }
            set
            {
                OnCDSManufacturerChanging(value);
                ReportPropertyChanging("CDSManufacturer");
                _CDSManufacturer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CDSManufacturer");
                OnCDSManufacturerChanged();
            }
        }
        private global::System.String _CDSManufacturer;
        partial void OnCDSManufacturerChanging(global::System.String value);
        partial void OnCDSManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDSProdNum
        {
            get
            {
                return _CDSProdNum;
            }
            set
            {
                OnCDSProdNumChanging(value);
                ReportPropertyChanging("CDSProdNum");
                _CDSProdNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CDSProdNum");
                OnCDSProdNumChanged();
            }
        }
        private global::System.String _CDSProdNum;
        partial void OnCDSProdNumChanging(global::System.String value);
        partial void OnCDSProdNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="ContentLibrary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentLibrary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentLibrary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ContentLibrary CreateContentLibrary(global::System.Int32 id, global::System.String name)
        {
            ContentLibrary contentLibrary = new ContentLibrary();
            contentLibrary.Id = id;
            contentLibrary.Name = name;
            return contentLibrary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ContentLibraryTreeNode", "TreeNodes")]
        public EntityCollection<TreeNode> TreeNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeNode>("BXC_ContentModel.FK_ContentLibraryTreeNode", "TreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeNode>("BXC_ContentModel.FK_ContentLibraryTreeNode", "TreeNodes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="IESFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IESFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IESFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IESFile CreateIESFile(global::System.Int32 id, global::System.String name)
        {
            IESFile iESFile = new IESFile();
            iESFile.Id = id;
            iESFile.Name = name;
            return iESFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_IESFileAutodeskFileIESFile", "AutodeskFileIESFiles")]
        public EntityCollection<AutodeskFileIESFile> AutodeskFileIESFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileIESFile>("BXC_ContentModel.FK_IESFileAutodeskFileIESFile", "AutodeskFileIESFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileIESFile>("BXC_ContentModel.FK_IESFileAutodeskFileIESFile", "AutodeskFileIESFiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="fileType">Initial value of the FileType property.</param>
        public static Image CreateImage(global::System.Int32 id, global::System.String name, global::System.String location, global::System.String fileType)
        {
            Image image = new Image();
            image.Id = id;
            image.Name = name;
            image.Location = location;
            image.FileType = fileType;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.String _FileType;
        partial void OnFileTypeChanging(global::System.String value);
        partial void OnFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAutodeskFile_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileImage", "AutodeskFiles")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileImage", "AutodeskFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileImage", "AutodeskFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileImage", "AutodeskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXC_ContentModel.FK_AutodeskFileImage", "AutodeskFiles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="autodeskFile_Id">Initial value of the AutodeskFile_Id property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String name, global::System.Int32 autodeskFile_Id)
        {
            Item item = new Item();
            item.Id = id;
            item.Name = name;
            item.AutodeskFile_Id = autodeskFile_Id;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFile_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeCatalogEntry
        {
            get
            {
                return _TypeCatalogEntry;
            }
            set
            {
                OnTypeCatalogEntryChanging(value);
                ReportPropertyChanging("TypeCatalogEntry");
                _TypeCatalogEntry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeCatalogEntry");
                OnTypeCatalogEntryChanged();
            }
        }
        private global::System.String _TypeCatalogEntry;
        partial void OnTypeCatalogEntryChanging(global::System.String value);
        partial void OnTypeCatalogEntryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ItemAutodeskFile", "AutodeskFiles")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_ItemAutodeskFile", "AutodeskFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_ItemAutodeskFile", "AutodeskFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXC_ContentModel.FK_ItemAutodeskFile", "AutodeskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXC_ContentModel.FK_ItemAutodeskFile", "AutodeskFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ParameterItem", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("BXC_ContentModel.FK_ParameterItem", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("BXC_ContentModel.FK_ParameterItem", "Parameters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="searchValues_Id">Initial value of the SearchValues_Id property.</param>
        /// <param name="searchNames_Id">Initial value of the SearchNames_Id property.</param>
        /// <param name="featured">Initial value of the Featured property.</param>
        /// <param name="hidden">Initial value of the Hidden property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static Parameter CreateParameter(global::System.Int32 id, global::System.Int32 searchValues_Id, global::System.Int32 searchNames_Id, global::System.Boolean featured, global::System.Boolean hidden, global::System.Int32 item_Id)
        {
            Parameter parameter = new Parameter();
            parameter.Id = id;
            parameter.SearchValues_Id = searchValues_Id;
            parameter.SearchNames_Id = searchNames_Id;
            parameter.Featured = featured;
            parameter.Hidden = hidden;
            parameter.Item_Id = item_Id;
            return parameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchValues_Id
        {
            get
            {
                return _SearchValues_Id;
            }
            set
            {
                OnSearchValues_IdChanging(value);
                ReportPropertyChanging("SearchValues_Id");
                _SearchValues_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchValues_Id");
                OnSearchValues_IdChanged();
            }
        }
        private global::System.Int32 _SearchValues_Id;
        partial void OnSearchValues_IdChanging(global::System.Int32 value);
        partial void OnSearchValues_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchNames_Id
        {
            get
            {
                return _SearchNames_Id;
            }
            set
            {
                OnSearchNames_IdChanging(value);
                ReportPropertyChanging("SearchNames_Id");
                _SearchNames_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchNames_Id");
                OnSearchNames_IdChanged();
            }
        }
        private global::System.Int32 _SearchNames_Id;
        partial void OnSearchNames_IdChanging(global::System.Int32 value);
        partial void OnSearchNames_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Featured
        {
            get
            {
                return _Featured;
            }
            set
            {
                OnFeaturedChanging(value);
                ReportPropertyChanging("Featured");
                _Featured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Featured");
                OnFeaturedChanged();
            }
        }
        private global::System.Boolean _Featured;
        partial void OnFeaturedChanging(global::System.Boolean value);
        partial void OnFeaturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hidden
        {
            get
            {
                return _Hidden;
            }
            set
            {
                OnHiddenChanging(value);
                ReportPropertyChanging("Hidden");
                _Hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hidden");
                OnHiddenChanged();
            }
        }
        private global::System.Boolean _Hidden;
        partial void OnHiddenChanging(global::System.Boolean value);
        partial void OnHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ParameterItem", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("BXC_ContentModel.FK_ParameterItem", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("BXC_ContentModel.FK_ParameterItem", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("BXC_ContentModel.FK_ParameterItem", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("BXC_ContentModel.FK_ParameterItem", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ItemParameterSearchNames", "SearchNames")]
        public SearchName SearchName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchName>("BXC_ContentModel.FK_ItemParameterSearchNames", "SearchNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchName>("BXC_ContentModel.FK_ItemParameterSearchNames", "SearchNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchName> SearchNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchName>("BXC_ContentModel.FK_ItemParameterSearchNames", "SearchNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchName>("BXC_ContentModel.FK_ItemParameterSearchNames", "SearchNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ItemParameterSearchValues", "SearchValues")]
        public SearchValue SearchValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchValue>("BXC_ContentModel.FK_ItemParameterSearchValues", "SearchValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchValue>("BXC_ContentModel.FK_ItemParameterSearchValues", "SearchValues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchValue> SearchValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchValue>("BXC_ContentModel.FK_ItemParameterSearchValues", "SearchValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchValue>("BXC_ContentModel.FK_ItemParameterSearchValues", "SearchValues", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="SearchName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SearchName CreateSearchName(global::System.Int32 id, global::System.String name)
        {
            SearchName searchName = new SearchName();
            searchName.Id = id;
            searchName.Name = name;
            return searchName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ItemParameterSearchNames", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("BXC_ContentModel.FK_ItemParameterSearchNames", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("BXC_ContentModel.FK_ItemParameterSearchNames", "Parameters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="SearchValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static SearchValue CreateSearchValue(global::System.Int32 id, global::System.String value)
        {
            SearchValue searchValue = new SearchValue();
            searchValue.Id = id;
            searchValue.Value = value;
            return searchValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ItemParameterSearchValues", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("BXC_ContentModel.FK_ItemParameterSearchValues", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("BXC_ContentModel.FK_ItemParameterSearchValues", "Parameters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXC_ContentModel", Name="TreeNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeNode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="contentLibrary_Id">Initial value of the ContentLibrary_Id property.</param>
        public static TreeNode CreateTreeNode(global::System.Int32 id, global::System.String name, global::System.Int32 contentLibrary_Id)
        {
            TreeNode treeNode = new TreeNode();
            treeNode.Id = id;
            treeNode.Name = name;
            treeNode.ContentLibrary_Id = contentLibrary_Id;
            return treeNode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                OnParent_IdChanging(value);
                ReportPropertyChanging("Parent_Id");
                _Parent_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent_Id");
                OnParent_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent_Id;
        partial void OnParent_IdChanging(Nullable<global::System.Int32> value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentLibrary_Id
        {
            get
            {
                return _ContentLibrary_Id;
            }
            set
            {
                OnContentLibrary_IdChanging(value);
                ReportPropertyChanging("ContentLibrary_Id");
                _ContentLibrary_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentLibrary_Id");
                OnContentLibrary_IdChanged();
            }
        }
        private global::System.Int32 _ContentLibrary_Id;
        partial void OnContentLibrary_IdChanging(global::System.Int32 value);
        partial void OnContentLibrary_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_AutodeskFileTreeNode_TreeNode", "AutodeskFileTreeNodes")]
        public EntityCollection<AutodeskFileTreeNode> AutodeskFileTreeNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_TreeNode", "AutodeskFileTreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileTreeNode>("BXC_ContentModel.FK_AutodeskFileTreeNode_TreeNode", "AutodeskFileTreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_ContentLibraryTreeNode", "ContentLibraries")]
        public ContentLibrary ContentLibrary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentLibrary>("BXC_ContentModel.FK_ContentLibraryTreeNode", "ContentLibraries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentLibrary>("BXC_ContentModel.FK_ContentLibraryTreeNode", "ContentLibraries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentLibrary> ContentLibraryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentLibrary>("BXC_ContentModel.FK_ContentLibraryTreeNode", "ContentLibraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentLibrary>("BXC_ContentModel.FK_ContentLibraryTreeNode", "ContentLibraries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_TreeNodeTreeNode", "TreeNodes1")]
        public EntityCollection<TreeNode> TreeNodes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeNode>("BXC_ContentModel.FK_TreeNodeTreeNode", "TreeNodes1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeNode>("BXC_ContentModel.FK_TreeNodeTreeNode", "TreeNodes1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXC_ContentModel", "FK_TreeNodeTreeNode", "TreeNodes")]
        public TreeNode TreeNode1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXC_ContentModel.FK_TreeNodeTreeNode", "TreeNodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXC_ContentModel.FK_TreeNodeTreeNode", "TreeNodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreeNode> TreeNode1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXC_ContentModel.FK_TreeNodeTreeNode", "TreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeNode>("BXC_ContentModel.FK_TreeNodeTreeNode", "TreeNodes", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
