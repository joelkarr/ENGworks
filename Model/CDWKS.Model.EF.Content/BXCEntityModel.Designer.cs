//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BXCModel", "FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFileTreeNode), "AutodeskFileIESFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFileIESFile), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_IESFileAutodeskFileIESFile", "IESFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.IESFile), "AutodeskFileIESFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFileIESFile), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_AutodeskFileImage", "AutodeskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFile), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Image), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFile), "AutodeskFileTreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFileTreeNode), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_ItemAutodeskFile", "AutodeskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFile), "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Item), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_AutodeskFileTreeNode_TreeNode", "TreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.TreeNode), "AutodeskFileTreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFileTreeNode), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_ParameterItem", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.Item), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Parameter), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_ItemParameterSearchNames", "SearchNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.SearchName), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Parameter), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_ItemParameterSearchValues", "SearchValues", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.SearchValue), "Parameters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Parameter), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_TreeNodeTreeNode", "TreeNodes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CDWKS.Model.EF.BIMXchange.TreeNode), "TreeNodes1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.TreeNode), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_AutodeskFileRevitVersion", "AutodeskFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.AutodeskFile), "RevitVersion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.RevitVersion), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_LibraryDownload", "Library", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.Library), "Download", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Download), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_UserDownload", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.User), "Download", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Download), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_ExtendedPropertyPropertyName", "PropertyName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.PropertyName), "ExtendedProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.ExtendedProperty), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_ExtendedPropertyPropertyValue", "PropertyValue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.PropertyValue), "ExtendedProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.ExtendedProperty), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_UserExtendedProperty", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.User), "ExtendedProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.ExtendedProperty), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_LibraryTreeNode", "Library", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.Library), "TreeNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.TreeNode), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "FK_LicenseOwner", "Owner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CDWKS.Model.EF.BIMXchange.Owner), "License", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.License), true)]
[assembly: EdmRelationshipAttribute("BXCModel", "LicenseLibrary", "Library", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.Library), "License", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CDWKS.Model.EF.BIMXchange.License))]

#endregion

namespace CDWKS.Model.EF.BIMXchange
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BXCModelEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BXCModelEntities object using the connection string found in the 'BXCModelEntities' section of the application configuration file.
        /// </summary>
        public BXCModelEntities() : base("name=BXCModelEntities", "BXCModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BXCModelEntities object.
        /// </summary>
        public BXCModelEntities(string connectionString) : base(connectionString, "BXCModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BXCModelEntities object.
        /// </summary>
        public BXCModelEntities(EntityConnection connection) : base(connection, "BXCModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutodeskFileIESFile> AutodeskFileIESFiles
        {
            get
            {
                if ((_AutodeskFileIESFiles == null))
                {
                    _AutodeskFileIESFiles = base.CreateObjectSet<AutodeskFileIESFile>("AutodeskFileIESFiles");
                }
                return _AutodeskFileIESFiles;
            }
        }
        private ObjectSet<AutodeskFileIESFile> _AutodeskFileIESFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutodeskFile> AutodeskFiles
        {
            get
            {
                if ((_AutodeskFiles == null))
                {
                    _AutodeskFiles = base.CreateObjectSet<AutodeskFile>("AutodeskFiles");
                }
                return _AutodeskFiles;
            }
        }
        private ObjectSet<AutodeskFile> _AutodeskFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutodeskFileTreeNode> AutodeskFileTreeNodes
        {
            get
            {
                if ((_AutodeskFileTreeNodes == null))
                {
                    _AutodeskFileTreeNodes = base.CreateObjectSet<AutodeskFileTreeNode>("AutodeskFileTreeNodes");
                }
                return _AutodeskFileTreeNodes;
            }
        }
        private ObjectSet<AutodeskFileTreeNode> _AutodeskFileTreeNodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CDSLink> CDSLinks
        {
            get
            {
                if ((_CDSLinks == null))
                {
                    _CDSLinks = base.CreateObjectSet<CDSLink>("CDSLinks");
                }
                return _CDSLinks;
            }
        }
        private ObjectSet<CDSLink> _CDSLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IESFile> IESFiles
        {
            get
            {
                if ((_IESFiles == null))
                {
                    _IESFiles = base.CreateObjectSet<IESFile>("IESFiles");
                }
                return _IESFiles;
            }
        }
        private ObjectSet<IESFile> _IESFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchName> SearchNames
        {
            get
            {
                if ((_SearchNames == null))
                {
                    _SearchNames = base.CreateObjectSet<SearchName>("SearchNames");
                }
                return _SearchNames;
            }
        }
        private ObjectSet<SearchName> _SearchNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchValue> SearchValues
        {
            get
            {
                if ((_SearchValues == null))
                {
                    _SearchValues = base.CreateObjectSet<SearchValue>("SearchValues");
                }
                return _SearchValues;
            }
        }
        private ObjectSet<SearchValue> _SearchValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreeNode> TreeNodes
        {
            get
            {
                if ((_TreeNodes == null))
                {
                    _TreeNodes = base.CreateObjectSet<TreeNode>("TreeNodes");
                }
                return _TreeNodes;
            }
        }
        private ObjectSet<TreeNode> _TreeNodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RevitVersion> RevitVersions
        {
            get
            {
                if ((_RevitVersions == null))
                {
                    _RevitVersions = base.CreateObjectSet<RevitVersion>("RevitVersions");
                }
                return _RevitVersions;
            }
        }
        private ObjectSet<RevitVersion> _RevitVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Download> Downloads
        {
            get
            {
                if ((_Downloads == null))
                {
                    _Downloads = base.CreateObjectSet<Download>("Downloads");
                }
                return _Downloads;
            }
        }
        private ObjectSet<Download> _Downloads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExtendedProperty> ExtendedProperties
        {
            get
            {
                if ((_ExtendedProperties == null))
                {
                    _ExtendedProperties = base.CreateObjectSet<ExtendedProperty>("ExtendedProperties");
                }
                return _ExtendedProperties;
            }
        }
        private ObjectSet<ExtendedProperty> _ExtendedProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Library> Libraries
        {
            get
            {
                if ((_Libraries == null))
                {
                    _Libraries = base.CreateObjectSet<Library>("Libraries");
                }
                return _Libraries;
            }
        }
        private ObjectSet<Library> _Libraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<License> Licenses
        {
            get
            {
                if ((_Licenses == null))
                {
                    _Licenses = base.CreateObjectSet<License>("Licenses");
                }
                return _Licenses;
            }
        }
        private ObjectSet<License> _Licenses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Owner> Owners
        {
            get
            {
                if ((_Owners == null))
                {
                    _Owners = base.CreateObjectSet<Owner>("Owners");
                }
                return _Owners;
            }
        }
        private ObjectSet<Owner> _Owners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyName> PropertyNames
        {
            get
            {
                if ((_PropertyNames == null))
                {
                    _PropertyNames = base.CreateObjectSet<PropertyName>("PropertyNames");
                }
                return _PropertyNames;
            }
        }
        private ObjectSet<PropertyName> _PropertyNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyValue> PropertyValues
        {
            get
            {
                if ((_PropertyValues == null))
                {
                    _PropertyValues = base.CreateObjectSet<PropertyValue>("PropertyValues");
                }
                return _PropertyValues;
            }
        }
        private ObjectSet<PropertyValue> _PropertyValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLibrary> UserLibraries
        {
            get
            {
                if ((_UserLibraries == null))
                {
                    _UserLibraries = base.CreateObjectSet<UserLibrary>("UserLibraries");
                }
                return _UserLibraries;
            }
        }
        private ObjectSet<UserLibrary> _UserLibraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutodeskFileIESFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutodeskFileIESFiles(AutodeskFileIESFile autodeskFileIESFile)
        {
            base.AddObject("AutodeskFileIESFiles", autodeskFileIESFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutodeskFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutodeskFiles(AutodeskFile autodeskFile)
        {
            base.AddObject("AutodeskFiles", autodeskFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutodeskFileTreeNodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutodeskFileTreeNodes(AutodeskFileTreeNode autodeskFileTreeNode)
        {
            base.AddObject("AutodeskFileTreeNodes", autodeskFileTreeNode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CDSLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCDSLinks(CDSLink cDSLink)
        {
            base.AddObject("CDSLinks", cDSLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IESFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIESFiles(IESFile iESFile)
        {
            base.AddObject("IESFiles", iESFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchNames(SearchName searchName)
        {
            base.AddObject("SearchNames", searchName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchValues(SearchValue searchValue)
        {
            base.AddObject("SearchValues", searchValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreeNodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreeNodes(TreeNode treeNode)
        {
            base.AddObject("TreeNodes", treeNode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RevitVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRevitVersions(RevitVersion revitVersion)
        {
            base.AddObject("RevitVersions", revitVersion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Downloads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDownloads(Download download)
        {
            base.AddObject("Downloads", download);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExtendedProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExtendedProperties(ExtendedProperty extendedProperty)
        {
            base.AddObject("ExtendedProperties", extendedProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Libraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLibraries(Library library)
        {
            base.AddObject("Libraries", library);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Licenses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicenses(License license)
        {
            base.AddObject("Licenses", license);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Owners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwners(Owner owner)
        {
            base.AddObject("Owners", owner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyNames(PropertyName propertyName)
        {
            base.AddObject("PropertyNames", propertyName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyValues(PropertyValue propertyValue)
        {
            base.AddObject("PropertyValues", propertyValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLibraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLibraries(UserLibrary userLibrary)
        {
            base.AddObject("UserLibraries", userLibrary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="AutodeskFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutodeskFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutodeskFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mC_OwnerId">Initial value of the MC_OwnerId property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static AutodeskFile CreateAutodeskFile(global::System.Int32 id, global::System.String name, global::System.String mC_OwnerId, global::System.Int32 version)
        {
            AutodeskFile autodeskFile = new AutodeskFile();
            autodeskFile.Id = id;
            autodeskFile.Name = name;
            autodeskFile.MC_OwnerId = mC_OwnerId;
            autodeskFile.Version = version;
            return autodeskFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MC_OwnerId
        {
            get
            {
                return _MC_OwnerId;
            }
            set
            {
                OnMC_OwnerIdChanging(value);
                ReportPropertyChanging("MC_OwnerId");
                _MC_OwnerId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MC_OwnerId");
                OnMC_OwnerIdChanged();
            }
        }
        private global::System.String _MC_OwnerId;
        partial void OnMC_OwnerIdChanging(global::System.String value);
        partial void OnMC_OwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeCatalogHeader
        {
            get
            {
                return _TypeCatalogHeader;
            }
            set
            {
                OnTypeCatalogHeaderChanging(value);
                ReportPropertyChanging("TypeCatalogHeader");
                _TypeCatalogHeader = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeCatalogHeader");
                OnTypeCatalogHeaderChanged();
            }
        }
        private global::System.String _TypeCatalogHeader;
        partial void OnTypeCatalogHeaderChanging(global::System.String value);
        partial void OnTypeCatalogHeaderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileImage", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("BXCModel.FK_AutodeskFileImage", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("BXCModel.FK_AutodeskFileImage", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFileTreeNodes")]
        public EntityCollection<AutodeskFileTreeNode> AutodeskFileTreeNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFileTreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFileTreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ItemAutodeskFile", "Items")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("BXCModel.FK_ItemAutodeskFile", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("BXCModel.FK_ItemAutodeskFile", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileRevitVersion", "RevitVersion")]
        public EntityCollection<RevitVersion> RevitVersions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RevitVersion>("BXCModel.FK_AutodeskFileRevitVersion", "RevitVersion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RevitVersion>("BXCModel.FK_AutodeskFileRevitVersion", "RevitVersion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="AutodeskFileIESFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutodeskFileIESFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutodeskFileIESFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autodeskFileTreeNode_Id">Initial value of the AutodeskFileTreeNode_Id property.</param>
        /// <param name="iESFile_Id">Initial value of the IESFile_Id property.</param>
        public static AutodeskFileIESFile CreateAutodeskFileIESFile(global::System.Int32 id, global::System.Int32 autodeskFileTreeNode_Id, global::System.Int32 iESFile_Id)
        {
            AutodeskFileIESFile autodeskFileIESFile = new AutodeskFileIESFile();
            autodeskFileIESFile.Id = id;
            autodeskFileIESFile.AutodeskFileTreeNode_Id = autodeskFileTreeNode_Id;
            autodeskFileIESFile.IESFile_Id = iESFile_Id;
            return autodeskFileIESFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFileTreeNode_Id
        {
            get
            {
                return _AutodeskFileTreeNode_Id;
            }
            set
            {
                OnAutodeskFileTreeNode_IdChanging(value);
                ReportPropertyChanging("AutodeskFileTreeNode_Id");
                _AutodeskFileTreeNode_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFileTreeNode_Id");
                OnAutodeskFileTreeNode_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFileTreeNode_Id;
        partial void OnAutodeskFileTreeNode_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFileTreeNode_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IESFile_Id
        {
            get
            {
                return _IESFile_Id;
            }
            set
            {
                OnIESFile_IdChanging(value);
                ReportPropertyChanging("IESFile_Id");
                _IESFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IESFile_Id");
                OnIESFile_IdChanged();
            }
        }
        private global::System.Int32 _IESFile_Id;
        partial void OnIESFile_IdChanging(global::System.Int32 value);
        partial void OnIESFile_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes")]
        public AutodeskFileTreeNode AutodeskFileTreeNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFileTreeNode> AutodeskFileTreeNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileTreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_IESFileAutodeskFileIESFile", "IESFiles")]
        public IESFile IESFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IESFile>("BXCModel.FK_IESFileAutodeskFileIESFile", "IESFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IESFile>("BXCModel.FK_IESFileAutodeskFileIESFile", "IESFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IESFile> IESFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IESFile>("BXCModel.FK_IESFileAutodeskFileIESFile", "IESFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IESFile>("BXCModel.FK_IESFileAutodeskFileIESFile", "IESFiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="AutodeskFileTreeNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutodeskFileTreeNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutodeskFileTreeNode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="autodeskFile_Id">Initial value of the AutodeskFile_Id property.</param>
        /// <param name="treeNodes_Id">Initial value of the TreeNodes_Id property.</param>
        public static AutodeskFileTreeNode CreateAutodeskFileTreeNode(global::System.Int32 id, global::System.Int32 autodeskFile_Id, global::System.Int32 treeNodes_Id)
        {
            AutodeskFileTreeNode autodeskFileTreeNode = new AutodeskFileTreeNode();
            autodeskFileTreeNode.Id = id;
            autodeskFileTreeNode.AutodeskFile_Id = autodeskFile_Id;
            autodeskFileTreeNode.TreeNodes_Id = treeNodes_Id;
            return autodeskFileTreeNode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFile_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreeNodes_Id
        {
            get
            {
                return _TreeNodes_Id;
            }
            set
            {
                OnTreeNodes_IdChanging(value);
                ReportPropertyChanging("TreeNodes_Id");
                _TreeNodes_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeNodes_Id");
                OnTreeNodes_IdChanged();
            }
        }
        private global::System.Int32 _TreeNodes_Id;
        partial void OnTreeNodes_IdChanging(global::System.Int32 value);
        partial void OnTreeNodes_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileIESFiles")]
        public EntityCollection<AutodeskFileIESFile> AutodeskFileIESFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileIESFile>("BXCModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileIESFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileIESFile>("BXCModel.FK_AutodeskFileTreeNodeAutodeskFileIESFile", "AutodeskFileIESFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileTreeNode_AutodeskFile", "AutodeskFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileTreeNode_TreeNode", "TreeNodes")]
        public TreeNode TreeNode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXCModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXCModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreeNode> TreeNodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXCModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeNode>("BXCModel.FK_AutodeskFileTreeNode_TreeNode", "TreeNodes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="CDSLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CDSLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CDSLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="family">Initial value of the Family property.</param>
        /// <param name="itemType">Initial value of the ItemType property.</param>
        /// <param name="cDSManufacturer">Initial value of the CDSManufacturer property.</param>
        /// <param name="cDSProdNum">Initial value of the CDSProdNum property.</param>
        public static CDSLink CreateCDSLink(global::System.Int32 id, global::System.String family, global::System.String itemType, global::System.String cDSManufacturer, global::System.String cDSProdNum)
        {
            CDSLink cDSLink = new CDSLink();
            cDSLink.Id = id;
            cDSLink.Family = family;
            cDSLink.ItemType = itemType;
            cDSLink.CDSManufacturer = cDSManufacturer;
            cDSLink.CDSProdNum = cDSProdNum;
            return cDSLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Family
        {
            get
            {
                return _Family;
            }
            set
            {
                OnFamilyChanging(value);
                ReportPropertyChanging("Family");
                _Family = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Family");
                OnFamilyChanged();
            }
        }
        private global::System.String _Family;
        partial void OnFamilyChanging(global::System.String value);
        partial void OnFamilyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDSManufacturer
        {
            get
            {
                return _CDSManufacturer;
            }
            set
            {
                OnCDSManufacturerChanging(value);
                ReportPropertyChanging("CDSManufacturer");
                _CDSManufacturer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CDSManufacturer");
                OnCDSManufacturerChanged();
            }
        }
        private global::System.String _CDSManufacturer;
        partial void OnCDSManufacturerChanging(global::System.String value);
        partial void OnCDSManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDSProdNum
        {
            get
            {
                return _CDSProdNum;
            }
            set
            {
                OnCDSProdNumChanging(value);
                ReportPropertyChanging("CDSProdNum");
                _CDSProdNum = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CDSProdNum");
                OnCDSProdNumChanged();
            }
        }
        private global::System.String _CDSProdNum;
        partial void OnCDSProdNumChanging(global::System.String value);
        partial void OnCDSProdNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="Download")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Download : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Download object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="content_Id">Initial value of the Content_Id property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        /// <param name="library_Id">Initial value of the Library_Id property.</param>
        /// <param name="user_Id">Initial value of the User_Id property.</param>
        public static Download CreateDownload(global::System.Int32 id, global::System.String content_Id, global::System.DateTime dateTime, global::System.Int32 library_Id, global::System.Int32 user_Id)
        {
            Download download = new Download();
            download.Id = id;
            download.Content_Id = content_Id;
            download.DateTime = dateTime;
            download.Library_Id = library_Id;
            download.User_Id = user_Id;
            return download;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content_Id
        {
            get
            {
                return _Content_Id;
            }
            set
            {
                OnContent_IdChanging(value);
                ReportPropertyChanging("Content_Id");
                _Content_Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content_Id");
                OnContent_IdChanged();
            }
        }
        private global::System.String _Content_Id;
        partial void OnContent_IdChanging(global::System.String value);
        partial void OnContent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Library_Id
        {
            get
            {
                return _Library_Id;
            }
            set
            {
                OnLibrary_IdChanging(value);
                ReportPropertyChanging("Library_Id");
                _Library_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Library_Id");
                OnLibrary_IdChanged();
            }
        }
        private global::System.Int32 _Library_Id;
        partial void OnLibrary_IdChanging(global::System.Int32 value);
        partial void OnLibrary_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_Id
        {
            get
            {
                return _User_Id;
            }
            set
            {
                OnUser_IdChanging(value);
                ReportPropertyChanging("User_Id");
                _User_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_Id");
                OnUser_IdChanged();
            }
        }
        private global::System.Int32 _User_Id;
        partial void OnUser_IdChanging(global::System.Int32 value);
        partial void OnUser_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_LibraryDownload", "Library")]
        public Library Library
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCModel.FK_LibraryDownload", "Library").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCModel.FK_LibraryDownload", "Library").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Library> LibraryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCModel.FK_LibraryDownload", "Library");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Library>("BXCModel.FK_LibraryDownload", "Library", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_UserDownload", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCModel.FK_UserDownload", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCModel.FK_UserDownload", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCModel.FK_UserDownload", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BXCModel.FK_UserDownload", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="ExtendedProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExtendedProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExtendedProperty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="propertyName_Id">Initial value of the PropertyName_Id property.</param>
        /// <param name="propertyValue_Id">Initial value of the PropertyValue_Id property.</param>
        /// <param name="user_Id">Initial value of the User_Id property.</param>
        public static ExtendedProperty CreateExtendedProperty(global::System.Int32 id, global::System.Int32 propertyName_Id, global::System.Int32 propertyValue_Id, global::System.Int32 user_Id)
        {
            ExtendedProperty extendedProperty = new ExtendedProperty();
            extendedProperty.Id = id;
            extendedProperty.PropertyName_Id = propertyName_Id;
            extendedProperty.PropertyValue_Id = propertyValue_Id;
            extendedProperty.User_Id = user_Id;
            return extendedProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyName_Id
        {
            get
            {
                return _PropertyName_Id;
            }
            set
            {
                OnPropertyName_IdChanging(value);
                ReportPropertyChanging("PropertyName_Id");
                _PropertyName_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyName_Id");
                OnPropertyName_IdChanged();
            }
        }
        private global::System.Int32 _PropertyName_Id;
        partial void OnPropertyName_IdChanging(global::System.Int32 value);
        partial void OnPropertyName_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyValue_Id
        {
            get
            {
                return _PropertyValue_Id;
            }
            set
            {
                OnPropertyValue_IdChanging(value);
                ReportPropertyChanging("PropertyValue_Id");
                _PropertyValue_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PropertyValue_Id");
                OnPropertyValue_IdChanged();
            }
        }
        private global::System.Int32 _PropertyValue_Id;
        partial void OnPropertyValue_IdChanging(global::System.Int32 value);
        partial void OnPropertyValue_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_Id
        {
            get
            {
                return _User_Id;
            }
            set
            {
                OnUser_IdChanging(value);
                ReportPropertyChanging("User_Id");
                _User_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_Id");
                OnUser_IdChanged();
            }
        }
        private global::System.Int32 _User_Id;
        partial void OnUser_IdChanging(global::System.Int32 value);
        partial void OnUser_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ExtendedPropertyPropertyName", "PropertyName")]
        public PropertyName PropertyName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyName>("BXCModel.FK_ExtendedPropertyPropertyName", "PropertyName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyName>("BXCModel.FK_ExtendedPropertyPropertyName", "PropertyName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyName> PropertyNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyName>("BXCModel.FK_ExtendedPropertyPropertyName", "PropertyName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyName>("BXCModel.FK_ExtendedPropertyPropertyName", "PropertyName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ExtendedPropertyPropertyValue", "PropertyValue")]
        public PropertyValue PropertyValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValue>("BXCModel.FK_ExtendedPropertyPropertyValue", "PropertyValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValue>("BXCModel.FK_ExtendedPropertyPropertyValue", "PropertyValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyValue> PropertyValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyValue>("BXCModel.FK_ExtendedPropertyPropertyValue", "PropertyValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyValue>("BXCModel.FK_ExtendedPropertyPropertyValue", "PropertyValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_UserExtendedProperty", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCModel.FK_UserExtendedProperty", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCModel.FK_UserExtendedProperty", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BXCModel.FK_UserExtendedProperty", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BXCModel.FK_UserExtendedProperty", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="IESFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IESFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IESFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IESFile CreateIESFile(global::System.Int32 id, global::System.String name)
        {
            IESFile iESFile = new IESFile();
            iESFile.Id = id;
            iESFile.Name = name;
            return iESFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_IESFileAutodeskFileIESFile", "AutodeskFileIESFiles")]
        public EntityCollection<AutodeskFileIESFile> AutodeskFileIESFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileIESFile>("BXCModel.FK_IESFileAutodeskFileIESFile", "AutodeskFileIESFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileIESFile>("BXCModel.FK_IESFileAutodeskFileIESFile", "AutodeskFileIESFiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="fileType">Initial value of the FileType property.</param>
        public static Image CreateImage(global::System.Int32 id, global::System.String name, global::System.String location, global::System.String fileType)
        {
            Image image = new Image();
            image.Id = id;
            image.Name = name;
            image.Location = location;
            image.FileType = fileType;
            return image;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.String _FileType;
        partial void OnFileTypeChanging(global::System.String value);
        partial void OnFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAutodeskFile_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileImage", "AutodeskFiles")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileImage", "AutodeskFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileImage", "AutodeskFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileImage", "AutodeskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileImage", "AutodeskFiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="autodeskFile_Id">Initial value of the AutodeskFile_Id property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String name, global::System.Int32 autodeskFile_Id)
        {
            Item item = new Item();
            item.Id = id;
            item.Name = name;
            item.AutodeskFile_Id = autodeskFile_Id;
            return item;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFile_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeCatalogEntry
        {
            get
            {
                return _TypeCatalogEntry;
            }
            set
            {
                OnTypeCatalogEntryChanging(value);
                ReportPropertyChanging("TypeCatalogEntry");
                _TypeCatalogEntry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeCatalogEntry");
                OnTypeCatalogEntryChanged();
            }
        }
        private global::System.String _TypeCatalogEntry;
        partial void OnTypeCatalogEntryChanging(global::System.String value);
        partial void OnTypeCatalogEntryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ItemAutodeskFile", "AutodeskFiles")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_ItemAutodeskFile", "AutodeskFiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_ItemAutodeskFile", "AutodeskFiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_ItemAutodeskFile", "AutodeskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXCModel.FK_ItemAutodeskFile", "AutodeskFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ParameterItem", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("BXCModel.FK_ParameterItem", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("BXCModel.FK_ParameterItem", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="Library")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Library : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Library object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Library CreateLibrary(global::System.Int32 id, global::System.String name)
        {
            Library library = new Library();
            library.Id = id;
            library.Name = name;
            return library;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_LibraryDownload", "Download")]
        public EntityCollection<Download> Downloads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Download>("BXCModel.FK_LibraryDownload", "Download");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Download>("BXCModel.FK_LibraryDownload", "Download", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_LibraryTreeNode", "TreeNode")]
        public EntityCollection<TreeNode> TreeNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeNode>("BXCModel.FK_LibraryTreeNode", "TreeNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeNode>("BXCModel.FK_LibraryTreeNode", "TreeNode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "LicenseLibrary", "License")]
        public EntityCollection<License> Licenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<License>("BXCModel.LicenseLibrary", "License");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<License>("BXCModel.LicenseLibrary", "License", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="License")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class License : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new License object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="authCode">Initial value of the AuthCode property.</param>
        /// <param name="maxUsers">Initial value of the MaxUsers property.</param>
        /// <param name="licenseType_Id">Initial value of the LicenseType_Id property.</param>
        /// <param name="owner_Id">Initial value of the Owner_Id property.</param>
        public static License CreateLicense(global::System.Int32 id, global::System.String authCode, global::System.Int64 maxUsers, global::System.Int32 licenseType_Id, global::System.Int32 owner_Id)
        {
            License license = new License();
            license.Id = id;
            license.AuthCode = authCode;
            license.MaxUsers = maxUsers;
            license.LicenseType_Id = licenseType_Id;
            license.Owner_Id = owner_Id;
            return license;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthCode
        {
            get
            {
                return _AuthCode;
            }
            set
            {
                OnAuthCodeChanging(value);
                ReportPropertyChanging("AuthCode");
                _AuthCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuthCode");
                OnAuthCodeChanged();
            }
        }
        private global::System.String _AuthCode;
        partial void OnAuthCodeChanging(global::System.String value);
        partial void OnAuthCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaxUsers
        {
            get
            {
                return _MaxUsers;
            }
            set
            {
                OnMaxUsersChanging(value);
                ReportPropertyChanging("MaxUsers");
                _MaxUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxUsers");
                OnMaxUsersChanged();
            }
        }
        private global::System.Int64 _MaxUsers;
        partial void OnMaxUsersChanging(global::System.Int64 value);
        partial void OnMaxUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicenseType_Id
        {
            get
            {
                return _LicenseType_Id;
            }
            set
            {
                OnLicenseType_IdChanging(value);
                ReportPropertyChanging("LicenseType_Id");
                _LicenseType_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseType_Id");
                OnLicenseType_IdChanged();
            }
        }
        private global::System.Int32 _LicenseType_Id;
        partial void OnLicenseType_IdChanging(global::System.Int32 value);
        partial void OnLicenseType_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Owner_Id
        {
            get
            {
                return _Owner_Id;
            }
            set
            {
                OnOwner_IdChanging(value);
                ReportPropertyChanging("Owner_Id");
                _Owner_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Owner_Id");
                OnOwner_IdChanged();
            }
        }
        private global::System.Int32 _Owner_Id;
        partial void OnOwner_IdChanging(global::System.Int32 value);
        partial void OnOwner_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_LicenseOwner", "Owner")]
        public Owner Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("BXCModel.FK_LicenseOwner", "Owner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("BXCModel.FK_LicenseOwner", "Owner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("BXCModel.FK_LicenseOwner", "Owner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("BXCModel.FK_LicenseOwner", "Owner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "LicenseLibrary", "Library")]
        public EntityCollection<Library> Libraries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Library>("BXCModel.LicenseLibrary", "Library");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Library>("BXCModel.LicenseLibrary", "Library", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="Owner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Owner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Owner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Owner CreateOwner(global::System.Int32 id, global::System.String name, global::System.DateTime createdDate)
        {
            Owner owner = new Owner();
            owner.Id = id;
            owner.Name = name;
            owner.CreatedDate = createdDate;
            return owner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_LicenseOwner", "License")]
        public EntityCollection<License> Licenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<License>("BXCModel.FK_LicenseOwner", "License");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<License>("BXCModel.FK_LicenseOwner", "License", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="searchValues_Id">Initial value of the SearchValues_Id property.</param>
        /// <param name="searchNames_Id">Initial value of the SearchNames_Id property.</param>
        /// <param name="featured">Initial value of the Featured property.</param>
        /// <param name="hidden">Initial value of the Hidden property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static Parameter CreateParameter(global::System.Int32 id, global::System.Int32 searchValues_Id, global::System.Int32 searchNames_Id, global::System.Boolean featured, global::System.Boolean hidden, global::System.Int32 item_Id)
        {
            Parameter parameter = new Parameter();
            parameter.Id = id;
            parameter.SearchValues_Id = searchValues_Id;
            parameter.SearchNames_Id = searchNames_Id;
            parameter.Featured = featured;
            parameter.Hidden = hidden;
            parameter.Item_Id = item_Id;
            return parameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchValues_Id
        {
            get
            {
                return _SearchValues_Id;
            }
            set
            {
                OnSearchValues_IdChanging(value);
                ReportPropertyChanging("SearchValues_Id");
                _SearchValues_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchValues_Id");
                OnSearchValues_IdChanged();
            }
        }
        private global::System.Int32 _SearchValues_Id;
        partial void OnSearchValues_IdChanging(global::System.Int32 value);
        partial void OnSearchValues_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SearchNames_Id
        {
            get
            {
                return _SearchNames_Id;
            }
            set
            {
                OnSearchNames_IdChanging(value);
                ReportPropertyChanging("SearchNames_Id");
                _SearchNames_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SearchNames_Id");
                OnSearchNames_IdChanged();
            }
        }
        private global::System.Int32 _SearchNames_Id;
        partial void OnSearchNames_IdChanging(global::System.Int32 value);
        partial void OnSearchNames_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Featured
        {
            get
            {
                return _Featured;
            }
            set
            {
                OnFeaturedChanging(value);
                ReportPropertyChanging("Featured");
                _Featured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Featured");
                OnFeaturedChanged();
            }
        }
        private global::System.Boolean _Featured;
        partial void OnFeaturedChanging(global::System.Boolean value);
        partial void OnFeaturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hidden
        {
            get
            {
                return _Hidden;
            }
            set
            {
                OnHiddenChanging(value);
                ReportPropertyChanging("Hidden");
                _Hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hidden");
                OnHiddenChanged();
            }
        }
        private global::System.Boolean _Hidden;
        partial void OnHiddenChanging(global::System.Boolean value);
        partial void OnHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ParameterItem", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("BXCModel.FK_ParameterItem", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("BXCModel.FK_ParameterItem", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("BXCModel.FK_ParameterItem", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("BXCModel.FK_ParameterItem", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ItemParameterSearchNames", "SearchNames")]
        public SearchName SearchName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchName>("BXCModel.FK_ItemParameterSearchNames", "SearchNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchName>("BXCModel.FK_ItemParameterSearchNames", "SearchNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchName> SearchNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchName>("BXCModel.FK_ItemParameterSearchNames", "SearchNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchName>("BXCModel.FK_ItemParameterSearchNames", "SearchNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ItemParameterSearchValues", "SearchValues")]
        public SearchValue SearchValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchValue>("BXCModel.FK_ItemParameterSearchValues", "SearchValues").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchValue>("BXCModel.FK_ItemParameterSearchValues", "SearchValues").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchValue> SearchValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchValue>("BXCModel.FK_ItemParameterSearchValues", "SearchValues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchValue>("BXCModel.FK_ItemParameterSearchValues", "SearchValues", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="PropertyName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PropertyName CreatePropertyName(global::System.Int32 id, global::System.String name)
        {
            PropertyName propertyName = new PropertyName();
            propertyName.Id = id;
            propertyName.Name = name;
            return propertyName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ExtendedPropertyPropertyName", "ExtendedProperty")]
        public EntityCollection<ExtendedProperty> ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtendedProperty>("BXCModel.FK_ExtendedPropertyPropertyName", "ExtendedProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtendedProperty>("BXCModel.FK_ExtendedPropertyPropertyName", "ExtendedProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="PropertyValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="extendedProperty_Id">Initial value of the ExtendedProperty_Id property.</param>
        public static PropertyValue CreatePropertyValue(global::System.Int32 id, global::System.String value, global::System.Int32 extendedProperty_Id)
        {
            PropertyValue propertyValue = new PropertyValue();
            propertyValue.Id = id;
            propertyValue.Value = value;
            propertyValue.ExtendedProperty_Id = extendedProperty_Id;
            return propertyValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExtendedProperty_Id
        {
            get
            {
                return _ExtendedProperty_Id;
            }
            set
            {
                OnExtendedProperty_IdChanging(value);
                ReportPropertyChanging("ExtendedProperty_Id");
                _ExtendedProperty_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExtendedProperty_Id");
                OnExtendedProperty_IdChanged();
            }
        }
        private global::System.Int32 _ExtendedProperty_Id;
        partial void OnExtendedProperty_IdChanging(global::System.Int32 value);
        partial void OnExtendedProperty_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ExtendedPropertyPropertyValue", "ExtendedProperty")]
        public EntityCollection<ExtendedProperty> ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtendedProperty>("BXCModel.FK_ExtendedPropertyPropertyValue", "ExtendedProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtendedProperty>("BXCModel.FK_ExtendedPropertyPropertyValue", "ExtendedProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="RevitVersion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RevitVersion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RevitVersion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="autodeskFile_Id">Initial value of the AutodeskFile_Id property.</param>
        public static RevitVersion CreateRevitVersion(global::System.Int32 id, global::System.String version, global::System.Int32 autodeskFile_Id)
        {
            RevitVersion revitVersion = new RevitVersion();
            revitVersion.Id = id;
            revitVersion.Version = version;
            revitVersion.AutodeskFile_Id = autodeskFile_Id;
            return revitVersion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutodeskFile_Id
        {
            get
            {
                return _AutodeskFile_Id;
            }
            set
            {
                OnAutodeskFile_IdChanging(value);
                ReportPropertyChanging("AutodeskFile_Id");
                _AutodeskFile_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutodeskFile_Id");
                OnAutodeskFile_IdChanged();
            }
        }
        private global::System.Int32 _AutodeskFile_Id;
        partial void OnAutodeskFile_IdChanging(global::System.Int32 value);
        partial void OnAutodeskFile_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileRevitVersion", "AutodeskFile")]
        public AutodeskFile AutodeskFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileRevitVersion", "AutodeskFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileRevitVersion", "AutodeskFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutodeskFile> AutodeskFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileRevitVersion", "AutodeskFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutodeskFile>("BXCModel.FK_AutodeskFileRevitVersion", "AutodeskFile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="SearchName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SearchName CreateSearchName(global::System.Int32 id, global::System.String name)
        {
            SearchName searchName = new SearchName();
            searchName.Id = id;
            searchName.Name = name;
            return searchName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ItemParameterSearchNames", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("BXCModel.FK_ItemParameterSearchNames", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("BXCModel.FK_ItemParameterSearchNames", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="SearchValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static SearchValue CreateSearchValue(global::System.Int32 id, global::System.String value)
        {
            SearchValue searchValue = new SearchValue();
            searchValue.Id = id;
            searchValue.Value = value;
            return searchValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_ItemParameterSearchValues", "Parameters")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("BXCModel.FK_ItemParameterSearchValues", "Parameters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("BXCModel.FK_ItemParameterSearchValues", "Parameters", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="TreeNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreeNode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreeNode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="library_Id">Initial value of the Library_Id property.</param>
        public static TreeNode CreateTreeNode(global::System.Int32 id, global::System.String name, global::System.Int32 library_Id)
        {
            TreeNode treeNode = new TreeNode();
            treeNode.Id = id;
            treeNode.Name = name;
            treeNode.Library_Id = library_Id;
            return treeNode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent_Id
        {
            get
            {
                return _Parent_Id;
            }
            set
            {
                OnParent_IdChanging(value);
                ReportPropertyChanging("Parent_Id");
                _Parent_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent_Id");
                OnParent_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent_Id;
        partial void OnParent_IdChanging(Nullable<global::System.Int32> value);
        partial void OnParent_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Library_Id
        {
            get
            {
                return _Library_Id;
            }
            set
            {
                OnLibrary_IdChanging(value);
                ReportPropertyChanging("Library_Id");
                _Library_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Library_Id");
                OnLibrary_IdChanged();
            }
        }
        private global::System.Int32 _Library_Id;
        partial void OnLibrary_IdChanging(global::System.Int32 value);
        partial void OnLibrary_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_AutodeskFileTreeNode_TreeNode", "AutodeskFileTreeNodes")]
        public EntityCollection<AutodeskFileTreeNode> AutodeskFileTreeNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNode_TreeNode", "AutodeskFileTreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AutodeskFileTreeNode>("BXCModel.FK_AutodeskFileTreeNode_TreeNode", "AutodeskFileTreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_TreeNodeTreeNode", "TreeNodes1")]
        public EntityCollection<TreeNode> TreeNodes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeNode>("BXCModel.FK_TreeNodeTreeNode", "TreeNodes1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeNode>("BXCModel.FK_TreeNodeTreeNode", "TreeNodes1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_TreeNodeTreeNode", "TreeNodes")]
        public TreeNode TreeNode1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXCModel.FK_TreeNodeTreeNode", "TreeNodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXCModel.FK_TreeNodeTreeNode", "TreeNodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TreeNode> TreeNode1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeNode>("BXCModel.FK_TreeNodeTreeNode", "TreeNodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeNode>("BXCModel.FK_TreeNodeTreeNode", "TreeNodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_LibraryTreeNode", "Library")]
        public Library Library
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCModel.FK_LibraryTreeNode", "Library").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCModel.FK_LibraryTreeNode", "Library").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Library> LibraryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("BXCModel.FK_LibraryTreeNode", "Library");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Library>("BXCModel.FK_LibraryTreeNode", "Library", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Password = password;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_UserDownload", "Download")]
        public EntityCollection<Download> Downloads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Download>("BXCModel.FK_UserDownload", "Download");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Download>("BXCModel.FK_UserDownload", "Download", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BXCModel", "FK_UserExtendedProperty", "ExtendedProperty")]
        public EntityCollection<ExtendedProperty> ExtendedProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExtendedProperty>("BXCModel.FK_UserExtendedProperty", "ExtendedProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExtendedProperty>("BXCModel.FK_UserExtendedProperty", "ExtendedProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BXCModel", Name="UserLibrary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLibrary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLibrary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="libraryId">Initial value of the LibraryId property.</param>
        public static UserLibrary CreateUserLibrary(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 libraryId)
        {
            UserLibrary userLibrary = new UserLibrary();
            userLibrary.Id = id;
            userLibrary.UserId = userId;
            userLibrary.LibraryId = libraryId;
            return userLibrary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryId
        {
            get
            {
                return _LibraryId;
            }
            set
            {
                OnLibraryIdChanging(value);
                ReportPropertyChanging("LibraryId");
                _LibraryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LibraryId");
                OnLibraryIdChanged();
            }
        }
        private global::System.Int32 _LibraryId;
        partial void OnLibraryIdChanging(global::System.Int32 value);
        partial void OnLibraryIdChanged();

        #endregion

    
    }

    #endregion

    
}
